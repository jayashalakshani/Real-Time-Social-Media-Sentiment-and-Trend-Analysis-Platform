{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1Hs6NVXif6Flx0aPA4frFX98oCpy_tgGO","authorship_tag":"ABX9TyM/bMZh7ptSp2He8XepXBDk"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"de1a597ccfbf437185eee618011d11b8":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_3f22d2596c814f409a75781f0a039707","IPY_MODEL_8ee1ee75f0ff42fca64516e9d17bbef6","IPY_MODEL_6af3b9406b274025910e0bb5eae169fa"],"layout":"IPY_MODEL_96449fe562cb4d47a42ba545efbdef2e"}},"3f22d2596c814f409a75781f0a039707":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_daf005bd55454890960e14e8f1eb1b58","placeholder":"​","style":"IPY_MODEL_9cd995a5a8304fbcbf235170e0dc9880","value":"config.json: 100%"}},"8ee1ee75f0ff42fca64516e9d17bbef6":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_c47a8cf5ac044a97a96ec43a2573ef15","max":747,"min":0,"orientation":"horizontal","style":"IPY_MODEL_30256981863a499287c95c8498899755","value":747}},"6af3b9406b274025910e0bb5eae169fa":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_3e441cd7de8b46b29ee81664e29c8170","placeholder":"​","style":"IPY_MODEL_7daf569089f1444fa4342b4ff86a59ed","value":" 747/747 [00:00&lt;00:00, 20.8kB/s]"}},"96449fe562cb4d47a42ba545efbdef2e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"daf005bd55454890960e14e8f1eb1b58":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9cd995a5a8304fbcbf235170e0dc9880":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"c47a8cf5ac044a97a96ec43a2573ef15":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"30256981863a499287c95c8498899755":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"3e441cd7de8b46b29ee81664e29c8170":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7daf569089f1444fa4342b4ff86a59ed":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"699d958bee184bb190aff26e6bb6d0c1":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_ac50bdd221e84f6bb62e4bb5575a6a74","IPY_MODEL_916958922f824a6bb255b6265193aced","IPY_MODEL_014f0c3508d24aa891262457fc162254"],"layout":"IPY_MODEL_1e5c52801a364ef386d0a4d1f63cb3e4"}},"ac50bdd221e84f6bb62e4bb5575a6a74":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d2b6b5f3196242b19d69d43823d32958","placeholder":"​","style":"IPY_MODEL_22df13652791409da4cfaa00726c0702","value":"vocab.json: 100%"}},"916958922f824a6bb255b6265193aced":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_086f0e2342694b18bdcfeb0f1695fb59","max":898822,"min":0,"orientation":"horizontal","style":"IPY_MODEL_03500b47eb06458e941bdadd659e1009","value":898822}},"014f0c3508d24aa891262457fc162254":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e7dd55d2fafe41ef9f9b647d4c5562ba","placeholder":"​","style":"IPY_MODEL_ad50655e021549ef93620d71f02a6763","value":" 899k/899k [00:00&lt;00:00, 4.63MB/s]"}},"1e5c52801a364ef386d0a4d1f63cb3e4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d2b6b5f3196242b19d69d43823d32958":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"22df13652791409da4cfaa00726c0702":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"086f0e2342694b18bdcfeb0f1695fb59":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"03500b47eb06458e941bdadd659e1009":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"e7dd55d2fafe41ef9f9b647d4c5562ba":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ad50655e021549ef93620d71f02a6763":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e66665eda51645ed8f5ec21b5ba16f64":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_7f0287d65bba4ab68d9bc8af2ae1cd6d","IPY_MODEL_fa755db30ab64a1494db7fe4612033b7","IPY_MODEL_a6e890316c1c45b19c30ab94e3354403"],"layout":"IPY_MODEL_68d26ea641c24f059d0907035032aa64"}},"7f0287d65bba4ab68d9bc8af2ae1cd6d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ee459c6d772d415291f8ef61f7d762a2","placeholder":"​","style":"IPY_MODEL_a9cd102193f849299f1d4ea09feb84f4","value":"merges.txt: 100%"}},"fa755db30ab64a1494db7fe4612033b7":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_0d8a0f382b484e8692005d2e1e318585","max":456318,"min":0,"orientation":"horizontal","style":"IPY_MODEL_85abe62380e54a77a8b6d7c83f06f8b1","value":456318}},"a6e890316c1c45b19c30ab94e3354403":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_694fd187d2b84d1ca7373f750e0c2471","placeholder":"​","style":"IPY_MODEL_fc5c8dd61da1462cabeda635b94e13f6","value":" 456k/456k [00:00&lt;00:00, 3.65MB/s]"}},"68d26ea641c24f059d0907035032aa64":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ee459c6d772d415291f8ef61f7d762a2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a9cd102193f849299f1d4ea09feb84f4":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0d8a0f382b484e8692005d2e1e318585":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"85abe62380e54a77a8b6d7c83f06f8b1":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"694fd187d2b84d1ca7373f750e0c2471":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"fc5c8dd61da1462cabeda635b94e13f6":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"25b758a3a646485d9f7e17766c2a2eb2":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_65846248da28416b9f5355f05abca9d1","IPY_MODEL_ea064600c7f84922aa6430b8d35fd781","IPY_MODEL_37014d4c35dd4f3aba83a7d8d00cf7f7"],"layout":"IPY_MODEL_a5e41a7356984372ad9667f9ce544d04"}},"65846248da28416b9f5355f05abca9d1":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_55483851a32e492a89294073f2819abe","placeholder":"​","style":"IPY_MODEL_780e1779613c4307bfe3431abe727fe7","value":"special_tokens_map.json: 100%"}},"ea064600c7f84922aa6430b8d35fd781":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_eb3cf4fad4f7469faaef38f9399d9a46","max":150,"min":0,"orientation":"horizontal","style":"IPY_MODEL_8bba19fddbf34986a714964de1965d27","value":150}},"37014d4c35dd4f3aba83a7d8d00cf7f7":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_0fa029a54608459d98c3b448e94d1e91","placeholder":"​","style":"IPY_MODEL_a925a2ff14ba4fcb99c5f38f66795402","value":" 150/150 [00:00&lt;00:00, 9.31kB/s]"}},"a5e41a7356984372ad9667f9ce544d04":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"55483851a32e492a89294073f2819abe":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"780e1779613c4307bfe3431abe727fe7":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"eb3cf4fad4f7469faaef38f9399d9a46":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8bba19fddbf34986a714964de1965d27":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"0fa029a54608459d98c3b448e94d1e91":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a925a2ff14ba4fcb99c5f38f66795402":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ba96ae76c6864e0896ea7646105315b4":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_c09a7f1ec9974505b8ea51f1036905b3","IPY_MODEL_6b387ee4520a461abefd9706a7858a72","IPY_MODEL_a3fa07655ff84480bc6afc0ff5ca5080"],"layout":"IPY_MODEL_c67e96986a93497db64eb9b96691a787"}},"c09a7f1ec9974505b8ea51f1036905b3":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_37fd15c8717745dca6c58466e3ae2ed5","placeholder":"​","style":"IPY_MODEL_b76479db4c0647f884e41b5066020e09","value":"pytorch_model.bin: 100%"}},"6b387ee4520a461abefd9706a7858a72":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_c1ab61c0159a437caccd2d73ef549b19","max":498679497,"min":0,"orientation":"horizontal","style":"IPY_MODEL_577fdb6fdb154f55ba14632fc4da3c88","value":498679497}},"a3fa07655ff84480bc6afc0ff5ca5080":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_04dbc5450dac4f9d9eeab2610d66ca2b","placeholder":"​","style":"IPY_MODEL_c60fe03e109f4f9492b92d7c401fcd36","value":" 499M/499M [00:02&lt;00:00, 241MB/s]"}},"c67e96986a93497db64eb9b96691a787":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"37fd15c8717745dca6c58466e3ae2ed5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b76479db4c0647f884e41b5066020e09":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"c1ab61c0159a437caccd2d73ef549b19":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"577fdb6fdb154f55ba14632fc4da3c88":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"04dbc5450dac4f9d9eeab2610d66ca2b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c60fe03e109f4f9492b92d7c401fcd36":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"cells":[{"cell_type":"code","source":["# Social Media Sentiment Analysis - Speed Layer Implementation\n","## Setup and Dependencies\n","!pip install pyspark pymongo transformers torch nltk pymongo[srv]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GNWifnWL8Kvh","executionInfo":{"status":"ok","timestamp":1746009476472,"user_tz":-330,"elapsed":108258,"user":{"displayName":"Jayasha Lakshani","userId":"04882499980161656328"}},"outputId":"6d907f9e-a724-43f5-da16-32381a9c372c"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: pyspark in /usr/local/lib/python3.11/dist-packages (3.5.5)\n","Collecting pymongo\n","  Downloading pymongo-4.12.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (22 kB)\n","Requirement already satisfied: transformers in /usr/local/lib/python3.11/dist-packages (4.51.3)\n","Requirement already satisfied: torch in /usr/local/lib/python3.11/dist-packages (2.6.0+cu124)\n","Requirement already satisfied: nltk in /usr/local/lib/python3.11/dist-packages (3.9.1)\n","Requirement already satisfied: py4j==0.10.9.7 in /usr/local/lib/python3.11/dist-packages (from pyspark) (0.10.9.7)\n","Collecting dnspython<3.0.0,>=1.16.0 (from pymongo)\n","  Downloading dnspython-2.7.0-py3-none-any.whl.metadata (5.8 kB)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.11/dist-packages (from transformers) (3.18.0)\n","Requirement already satisfied: huggingface-hub<1.0,>=0.30.0 in /usr/local/lib/python3.11/dist-packages (from transformers) (0.30.2)\n","Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.11/dist-packages (from transformers) (2.0.2)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.11/dist-packages (from transformers) (24.2)\n","Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.11/dist-packages (from transformers) (6.0.2)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.11/dist-packages (from transformers) (2024.11.6)\n","Requirement already satisfied: requests in /usr/local/lib/python3.11/dist-packages (from transformers) (2.32.3)\n","Requirement already satisfied: tokenizers<0.22,>=0.21 in /usr/local/lib/python3.11/dist-packages (from transformers) (0.21.1)\n","Requirement already satisfied: safetensors>=0.4.3 in /usr/local/lib/python3.11/dist-packages (from transformers) (0.5.3)\n","Requirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.11/dist-packages (from transformers) (4.67.1)\n","Requirement already satisfied: typing-extensions>=4.10.0 in /usr/local/lib/python3.11/dist-packages (from torch) (4.13.2)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.11/dist-packages (from torch) (3.4.2)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.11/dist-packages (from torch) (3.1.6)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.11/dist-packages (from torch) (2025.3.2)\n","Collecting nvidia-cuda-nvrtc-cu12==12.4.127 (from torch)\n","  Downloading nvidia_cuda_nvrtc_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-cuda-runtime-cu12==12.4.127 (from torch)\n","  Downloading nvidia_cuda_runtime_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-cuda-cupti-cu12==12.4.127 (from torch)\n","  Downloading nvidia_cuda_cupti_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n","Collecting nvidia-cudnn-cu12==9.1.0.70 (from torch)\n","  Downloading nvidia_cudnn_cu12-9.1.0.70-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n","Collecting nvidia-cublas-cu12==12.4.5.8 (from torch)\n","  Downloading nvidia_cublas_cu12-12.4.5.8-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-cufft-cu12==11.2.1.3 (from torch)\n","  Downloading nvidia_cufft_cu12-11.2.1.3-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-curand-cu12==10.3.5.147 (from torch)\n","  Downloading nvidia_curand_cu12-10.3.5.147-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-cusolver-cu12==11.6.1.9 (from torch)\n","  Downloading nvidia_cusolver_cu12-11.6.1.9-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n","Collecting nvidia-cusparse-cu12==12.3.1.170 (from torch)\n","  Downloading nvidia_cusparse_cu12-12.3.1.170-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n","Requirement already satisfied: nvidia-cusparselt-cu12==0.6.2 in /usr/local/lib/python3.11/dist-packages (from torch) (0.6.2)\n","Requirement already satisfied: nvidia-nccl-cu12==2.21.5 in /usr/local/lib/python3.11/dist-packages (from torch) (2.21.5)\n","Requirement already satisfied: nvidia-nvtx-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch) (12.4.127)\n","Collecting nvidia-nvjitlink-cu12==12.4.127 (from torch)\n","  Downloading nvidia_nvjitlink_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Requirement already satisfied: triton==3.2.0 in /usr/local/lib/python3.11/dist-packages (from torch) (3.2.0)\n","Requirement already satisfied: sympy==1.13.1 in /usr/local/lib/python3.11/dist-packages (from torch) (1.13.1)\n","Requirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.11/dist-packages (from sympy==1.13.1->torch) (1.3.0)\n","Requirement already satisfied: click in /usr/local/lib/python3.11/dist-packages (from nltk) (8.1.8)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.11/dist-packages (from nltk) (1.4.2)\n","\u001b[33mWARNING: pymongo 4.12.1 does not provide the extra 'srv'\u001b[0m\u001b[33m\n","\u001b[0mRequirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from jinja2->torch) (3.0.2)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests->transformers) (3.4.1)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests->transformers) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests->transformers) (2.4.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests->transformers) (2025.1.31)\n","Downloading pymongo-4.12.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.4 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.4/1.4 MB\u001b[0m \u001b[31m11.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cublas_cu12-12.4.5.8-py3-none-manylinux2014_x86_64.whl (363.4 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m363.4/363.4 MB\u001b[0m \u001b[31m4.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cuda_cupti_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (13.8 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13.8/13.8 MB\u001b[0m \u001b[31m67.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cuda_nvrtc_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (24.6 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m24.6/24.6 MB\u001b[0m \u001b[31m52.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cuda_runtime_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (883 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m883.7/883.7 kB\u001b[0m \u001b[31m32.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cudnn_cu12-9.1.0.70-py3-none-manylinux2014_x86_64.whl (664.8 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m664.8/664.8 MB\u001b[0m \u001b[31m2.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cufft_cu12-11.2.1.3-py3-none-manylinux2014_x86_64.whl (211.5 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m211.5/211.5 MB\u001b[0m \u001b[31m5.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_curand_cu12-10.3.5.147-py3-none-manylinux2014_x86_64.whl (56.3 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m56.3/56.3 MB\u001b[0m \u001b[31m7.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cusolver_cu12-11.6.1.9-py3-none-manylinux2014_x86_64.whl (127.9 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m127.9/127.9 MB\u001b[0m \u001b[31m7.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cusparse_cu12-12.3.1.170-py3-none-manylinux2014_x86_64.whl (207.5 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m207.5/207.5 MB\u001b[0m \u001b[31m4.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_nvjitlink_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (21.1 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m21.1/21.1 MB\u001b[0m \u001b[31m69.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading dnspython-2.7.0-py3-none-any.whl (313 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m313.6/313.6 kB\u001b[0m \u001b[31m18.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: nvidia-nvjitlink-cu12, nvidia-curand-cu12, nvidia-cufft-cu12, nvidia-cuda-runtime-cu12, nvidia-cuda-nvrtc-cu12, nvidia-cuda-cupti-cu12, nvidia-cublas-cu12, dnspython, pymongo, nvidia-cusparse-cu12, nvidia-cudnn-cu12, nvidia-cusolver-cu12\n","  Attempting uninstall: nvidia-nvjitlink-cu12\n","    Found existing installation: nvidia-nvjitlink-cu12 12.5.82\n","    Uninstalling nvidia-nvjitlink-cu12-12.5.82:\n","      Successfully uninstalled nvidia-nvjitlink-cu12-12.5.82\n","  Attempting uninstall: nvidia-curand-cu12\n","    Found existing installation: nvidia-curand-cu12 10.3.6.82\n","    Uninstalling nvidia-curand-cu12-10.3.6.82:\n","      Successfully uninstalled nvidia-curand-cu12-10.3.6.82\n","  Attempting uninstall: nvidia-cufft-cu12\n","    Found existing installation: nvidia-cufft-cu12 11.2.3.61\n","    Uninstalling nvidia-cufft-cu12-11.2.3.61:\n","      Successfully uninstalled nvidia-cufft-cu12-11.2.3.61\n","  Attempting uninstall: nvidia-cuda-runtime-cu12\n","    Found existing installation: nvidia-cuda-runtime-cu12 12.5.82\n","    Uninstalling nvidia-cuda-runtime-cu12-12.5.82:\n","      Successfully uninstalled nvidia-cuda-runtime-cu12-12.5.82\n","  Attempting uninstall: nvidia-cuda-nvrtc-cu12\n","    Found existing installation: nvidia-cuda-nvrtc-cu12 12.5.82\n","    Uninstalling nvidia-cuda-nvrtc-cu12-12.5.82:\n","      Successfully uninstalled nvidia-cuda-nvrtc-cu12-12.5.82\n","  Attempting uninstall: nvidia-cuda-cupti-cu12\n","    Found existing installation: nvidia-cuda-cupti-cu12 12.5.82\n","    Uninstalling nvidia-cuda-cupti-cu12-12.5.82:\n","      Successfully uninstalled nvidia-cuda-cupti-cu12-12.5.82\n","  Attempting uninstall: nvidia-cublas-cu12\n","    Found existing installation: nvidia-cublas-cu12 12.5.3.2\n","    Uninstalling nvidia-cublas-cu12-12.5.3.2:\n","      Successfully uninstalled nvidia-cublas-cu12-12.5.3.2\n","  Attempting uninstall: nvidia-cusparse-cu12\n","    Found existing installation: nvidia-cusparse-cu12 12.5.1.3\n","    Uninstalling nvidia-cusparse-cu12-12.5.1.3:\n","      Successfully uninstalled nvidia-cusparse-cu12-12.5.1.3\n","  Attempting uninstall: nvidia-cudnn-cu12\n","    Found existing installation: nvidia-cudnn-cu12 9.3.0.75\n","    Uninstalling nvidia-cudnn-cu12-9.3.0.75:\n","      Successfully uninstalled nvidia-cudnn-cu12-9.3.0.75\n","  Attempting uninstall: nvidia-cusolver-cu12\n","    Found existing installation: nvidia-cusolver-cu12 11.6.3.83\n","    Uninstalling nvidia-cusolver-cu12-11.6.3.83:\n","      Successfully uninstalled nvidia-cusolver-cu12-11.6.3.83\n","Successfully installed dnspython-2.7.0 nvidia-cublas-cu12-12.4.5.8 nvidia-cuda-cupti-cu12-12.4.127 nvidia-cuda-nvrtc-cu12-12.4.127 nvidia-cuda-runtime-cu12-12.4.127 nvidia-cudnn-cu12-9.1.0.70 nvidia-cufft-cu12-11.2.1.3 nvidia-curand-cu12-10.3.5.147 nvidia-cusolver-cu12-11.6.1.9 nvidia-cusparse-cu12-12.3.1.170 nvidia-nvjitlink-cu12-12.4.127 pymongo-4.12.1\n"]}]},{"cell_type":"code","source":["\"\"\"\n","# Social Media Sentiment Analysis - Speed Layer Implementation\n","\n","This script implements the speed layer for a lambda architecture that processes\n","social media data in real-time using Spark Structured Streaming. It analyzes sentiment\n","from Mastodon posts and YouTube comments, and stores the results in MongoDB.\n","\"\"\"\n","\n","# Import required libraries\n","import os\n","import json\n","import pandas as pd\n","from datetime import datetime\n","from pyspark.sql import SparkSession\n","from pyspark.sql.functions import col, udf, lit, to_date, current_timestamp, window\n","from pyspark.sql.types import StringType, ArrayType, StructType, StructField, IntegerType, FloatType, TimestampType\n","import pymongo\n","from transformers import AutoTokenizer, AutoModelForSequenceClassification\n","import torch\n","import nltk\n","from google.colab import drive, userdata"],"metadata":{"id":"_iJC3vTgxXhz","executionInfo":{"status":"ok","timestamp":1746009497048,"user_tz":-330,"elapsed":20571,"user":{"displayName":"Jayasha Lakshani","userId":"04882499980161656328"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["# Download necessary NLTK data\n","nltk.download('punkt')\n","nltk.download('stopwords')\n","nltk.download('punkt_tab')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kjMxUh-Uy-l7","executionInfo":{"status":"ok","timestamp":1746009498543,"user_tz":-330,"elapsed":1491,"user":{"displayName":"Jayasha Lakshani","userId":"04882499980161656328"}},"outputId":"93847373-e64f-47c4-9e83-83ecfd50bf5a"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Unzipping tokenizers/punkt.zip.\n","[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/stopwords.zip.\n","[nltk_data] Downloading package punkt_tab to /root/nltk_data...\n","[nltk_data]   Unzipping tokenizers/punkt_tab.zip.\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["# Mount Google Drive to save processed data and models\n","from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":321},"id":"B1Eq6Pu00RIy","executionInfo":{"status":"error","timestamp":1746009557834,"user_tz":-330,"elapsed":59293,"user":{"displayName":"Jayasha Lakshani","userId":"04882499980161656328"}},"outputId":"de51263b-ac69-4b00-f1a3-aa676f65546d"},"execution_count":4,"outputs":[{"output_type":"error","ename":"MessageError","evalue":"Error: credential propagation was unsuccessful","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mMessageError\u001b[0m                              Traceback (most recent call last)","\u001b[0;32m<ipython-input-4-2daa8fedcbe1>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# Mount Google Drive to save processed data and models\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mgoogle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolab\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdrive\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mdrive\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmount\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/drive'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/google/colab/drive.py\u001b[0m in \u001b[0;36mmount\u001b[0;34m(mountpoint, force_remount, timeout_ms, readonly)\u001b[0m\n\u001b[1;32m     98\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mmount\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmountpoint\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mforce_remount\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimeout_ms\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m120000\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreadonly\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     99\u001b[0m   \u001b[0;34m\"\"\"Mount your Google Drive at the specified mountpoint path.\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 100\u001b[0;31m   return _mount(\n\u001b[0m\u001b[1;32m    101\u001b[0m       \u001b[0mmountpoint\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    102\u001b[0m       \u001b[0mforce_remount\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mforce_remount\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/google/colab/drive.py\u001b[0m in \u001b[0;36m_mount\u001b[0;34m(mountpoint, force_remount, timeout_ms, ephemeral, readonly)\u001b[0m\n\u001b[1;32m    135\u001b[0m   )\n\u001b[1;32m    136\u001b[0m   \u001b[0;32mif\u001b[0m \u001b[0mephemeral\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 137\u001b[0;31m     _message.blocking_request(\n\u001b[0m\u001b[1;32m    138\u001b[0m         \u001b[0;34m'request_auth'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    139\u001b[0m         \u001b[0mrequest\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0;34m'authType'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m'dfs_ephemeral'\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/google/colab/_message.py\u001b[0m in \u001b[0;36mblocking_request\u001b[0;34m(request_type, request, timeout_sec, parent)\u001b[0m\n\u001b[1;32m    174\u001b[0m       \u001b[0mrequest_type\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrequest\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparent\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mparent\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexpect_reply\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    175\u001b[0m   )\n\u001b[0;32m--> 176\u001b[0;31m   \u001b[0;32mreturn\u001b[0m \u001b[0mread_reply_from_input\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrequest_id\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimeout_sec\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/google/colab/_message.py\u001b[0m in \u001b[0;36mread_reply_from_input\u001b[0;34m(message_id, timeout_sec)\u001b[0m\n\u001b[1;32m    101\u001b[0m     ):\n\u001b[1;32m    102\u001b[0m       \u001b[0;32mif\u001b[0m \u001b[0;34m'error'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mreply\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 103\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mMessageError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mreply\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'error'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    104\u001b[0m       \u001b[0;32mreturn\u001b[0m \u001b[0mreply\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'data'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    105\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mMessageError\u001b[0m: Error: credential propagation was unsuccessful"]}]},{"cell_type":"code","source":["# Set project directory\n","PROJECT_DIR = '/content/drive/MyDrive/Colab Notebooks/Sentiment Analysis'\n","os.makedirs(PROJECT_DIR, exist_ok=True)"],"metadata":{"id":"7MpW6B5w1BD4","executionInfo":{"status":"ok","timestamp":1746009580246,"user_tz":-330,"elapsed":839,"user":{"displayName":"Jayasha Lakshani","userId":"04882499980161656328"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["## Initialize Spark Session with Streaming configurations\n","spark = SparkSession.builder \\\n","    .appName(\"SentimentAnalysisSpeedLayer\") \\\n","    .config(\"spark.driver.memory\", \"12g\") \\\n","    .config(\"spark.executor.memory\", \"4g\") \\\n","    .config(\"spark.sql.streaming.schemaInference\", \"true\") \\\n","    .getOrCreate()\n","\n","print(f\"Spark version: {spark.version}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7cZmJQT94xpu","executionInfo":{"status":"ok","timestamp":1746009599660,"user_tz":-330,"elapsed":2697,"user":{"displayName":"Jayasha Lakshani","userId":"04882499980161656328"}},"outputId":"73abbce9-3404-4455-969a-361b3afce113"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Spark version: 3.5.5\n"]}]},{"cell_type":"code","source":["## MongoDB Connection\n","# Get credentials secret keys\n","username = userdata.get('mongodb_username')\n","password = userdata.get('mongodb_pw')\n","cluster_url = \"cluster0.8ad48r1.mongodb.net\"\n","MONGO_CONNECTION_STRING = f\"mongodb+srv://{username}:{password}@{cluster_url}/?retryWrites=true&w=majority&appName=Cluster0\"\n","\n","def connect_to_mongodb():\n","    \"\"\"Connect to MongoDB and return the database client.\"\"\"\n","    try:\n","        client = pymongo.MongoClient(MONGO_CONNECTION_STRING)\n","        print(\"Connected to MongoDB successfully!\")\n","        return client\n","    except Exception as e:\n","        print(f\"Failed to connect to MongoDB: {e}\")\n","        return None\n","\n","mongo_client = connect_to_mongodb()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"igylxr6R6Dfh","executionInfo":{"status":"ok","timestamp":1746009640902,"user_tz":-330,"elapsed":2995,"user":{"displayName":"Jayasha Lakshani","userId":"04882499980161656328"}},"outputId":"9fd9d0b6-1bfb-4d4f-9015-4933305053f7"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Connected to MongoDB successfully!\n"]}]},{"cell_type":"code","source":["# Create the new database for speed layer outputs\n","db = mongo_client[\"social_media_analytics_new\"] if mongo_client else None\n","\n","## Define Schemas - Needed for streaming sources\n","# Create schema for Mastodon data\n","mastodon_schema = StructType([\n","    StructField(\"tag\", StringType(), True),\n","    StructField(\"text\", StringType(), True),\n","    StructField(\"created_at\", TimestampType(), True),\n","    StructField(\"post_url\", StringType(), True)\n","])\n","\n","# Create schema for YouTube data\n","youtube_schema = StructType([\n","    StructField(\"tag\", StringType(), True),\n","    StructField(\"text\", StringType(), True),\n","    StructField(\"published_at\", StringType(), True),\n","    StructField(\"video_id\", StringType(), True),\n","    StructField(\"video_title\", StringType(), True)\n","])"],"metadata":{"id":"ls9t9kvU6wQt","executionInfo":{"status":"ok","timestamp":1746009650948,"user_tz":-330,"elapsed":113,"user":{"displayName":"Jayasha Lakshani","userId":"04882499980161656328"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["## Text Preprocessing Function\n","def clean_text(text):\n","    \"\"\"Clean text by removing unwanted characters, HTML tags, links, etc.\"\"\"\n","    if not text:\n","        return None\n","\n","    import re\n","    # Remove HTML tags\n","    text = re.sub(r'<.*?>', '', text)\n","    # Remove URLs\n","    text = re.sub(r'http\\S+|www\\S+|https\\S+', '', text)\n","    # Remove mentions\n","    text = re.sub(r'@\\w+', '', text)\n","    # Remove hashtag symbols but keep the text\n","    text = re.sub(r'#', '', text)\n","    # Remove special characters\n","    text = re.sub(r'[^\\w\\s]', '', text)\n","    # Remove extra whitespace\n","    text = re.sub(r'\\s+', ' ', text).strip()\n","\n","    return text if text else None"],"metadata":{"id":"KSK-sm5y7Sbs","executionInfo":{"status":"ok","timestamp":1746009672227,"user_tz":-330,"elapsed":1048,"user":{"displayName":"Jayasha Lakshani","userId":"04882499980161656328"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["## Sentiment Analysis Model\n","def load_sentiment_model():\n","    \"\"\"Load a pre-trained sentiment analysis model.\"\"\"\n","    model_name = \"cardiffnlp/twitter-roberta-base-sentiment\"\n","    tokenizer = AutoTokenizer.from_pretrained(model_name)\n","    model = AutoModelForSequenceClassification.from_pretrained(model_name)\n","    return tokenizer, model\n","\n","tokenizer, model = load_sentiment_model()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":212,"referenced_widgets":["de1a597ccfbf437185eee618011d11b8","3f22d2596c814f409a75781f0a039707","8ee1ee75f0ff42fca64516e9d17bbef6","6af3b9406b274025910e0bb5eae169fa","96449fe562cb4d47a42ba545efbdef2e","daf005bd55454890960e14e8f1eb1b58","9cd995a5a8304fbcbf235170e0dc9880","c47a8cf5ac044a97a96ec43a2573ef15","30256981863a499287c95c8498899755","3e441cd7de8b46b29ee81664e29c8170","7daf569089f1444fa4342b4ff86a59ed","699d958bee184bb190aff26e6bb6d0c1","ac50bdd221e84f6bb62e4bb5575a6a74","916958922f824a6bb255b6265193aced","014f0c3508d24aa891262457fc162254","1e5c52801a364ef386d0a4d1f63cb3e4","d2b6b5f3196242b19d69d43823d32958","22df13652791409da4cfaa00726c0702","086f0e2342694b18bdcfeb0f1695fb59","03500b47eb06458e941bdadd659e1009","e7dd55d2fafe41ef9f9b647d4c5562ba","ad50655e021549ef93620d71f02a6763","e66665eda51645ed8f5ec21b5ba16f64","7f0287d65bba4ab68d9bc8af2ae1cd6d","fa755db30ab64a1494db7fe4612033b7","a6e890316c1c45b19c30ab94e3354403","68d26ea641c24f059d0907035032aa64","ee459c6d772d415291f8ef61f7d762a2","a9cd102193f849299f1d4ea09feb84f4","0d8a0f382b484e8692005d2e1e318585","85abe62380e54a77a8b6d7c83f06f8b1","694fd187d2b84d1ca7373f750e0c2471","fc5c8dd61da1462cabeda635b94e13f6","25b758a3a646485d9f7e17766c2a2eb2","65846248da28416b9f5355f05abca9d1","ea064600c7f84922aa6430b8d35fd781","37014d4c35dd4f3aba83a7d8d00cf7f7","a5e41a7356984372ad9667f9ce544d04","55483851a32e492a89294073f2819abe","780e1779613c4307bfe3431abe727fe7","eb3cf4fad4f7469faaef38f9399d9a46","8bba19fddbf34986a714964de1965d27","0fa029a54608459d98c3b448e94d1e91","a925a2ff14ba4fcb99c5f38f66795402","ba96ae76c6864e0896ea7646105315b4","c09a7f1ec9974505b8ea51f1036905b3","6b387ee4520a461abefd9706a7858a72","a3fa07655ff84480bc6afc0ff5ca5080","c67e96986a93497db64eb9b96691a787","37fd15c8717745dca6c58466e3ae2ed5","b76479db4c0647f884e41b5066020e09","c1ab61c0159a437caccd2d73ef549b19","577fdb6fdb154f55ba14632fc4da3c88","04dbc5450dac4f9d9eeab2610d66ca2b","c60fe03e109f4f9492b92d7c401fcd36"]},"id":"vKr2GrL67_IF","executionInfo":{"status":"ok","timestamp":1746009723838,"user_tz":-330,"elapsed":25820,"user":{"displayName":"Jayasha Lakshani","userId":"04882499980161656328"}},"outputId":"797e202a-9f4b-4f9c-c3b0-c9c30121359f"},"execution_count":10,"outputs":[{"output_type":"display_data","data":{"text/plain":["config.json:   0%|          | 0.00/747 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"de1a597ccfbf437185eee618011d11b8"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["vocab.json:   0%|          | 0.00/899k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"699d958bee184bb190aff26e6bb6d0c1"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["merges.txt:   0%|          | 0.00/456k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e66665eda51645ed8f5ec21b5ba16f64"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["special_tokens_map.json:   0%|          | 0.00/150 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"25b758a3a646485d9f7e17766c2a2eb2"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["Xet Storage is enabled for this repo, but the 'hf_xet' package is not installed. Falling back to regular HTTP download. For better performance, install the package with: `pip install huggingface_hub[hf_xet]` or `pip install hf_xet`\n","WARNING:huggingface_hub.file_download:Xet Storage is enabled for this repo, but the 'hf_xet' package is not installed. Falling back to regular HTTP download. For better performance, install the package with: `pip install huggingface_hub[hf_xet]` or `pip install hf_xet`\n"]},{"output_type":"display_data","data":{"text/plain":["pytorch_model.bin:   0%|          | 0.00/499M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ba96ae76c6864e0896ea7646105315b4"}},"metadata":{}}]},{"cell_type":"code","source":["def analyze_sentiment_transformers(text, max_length=512):\n","    \"\"\"Analyze sentiment using Transformers.\"\"\"\n","    if not text:\n","        return None\n","\n","    # Truncate text if needed\n","    if len(text) > max_length * 4:  # rough character estimate\n","        text = text[:max_length * 4]\n","\n","    inputs = tokenizer(text, return_tensors=\"pt\", truncation=True, max_length=max_length)\n","\n","    with torch.no_grad():\n","        outputs = model(**inputs)\n","        scores = torch.nn.functional.softmax(outputs.logits, dim=1)\n","        sentiment_id = torch.argmax(scores).item()\n","\n","    # Map sentiment ID to label (specific to the model)\n","    id2label = {0: \"negative\", 1: \"neutral\", 2: \"positive\"}\n","    sentiment = id2label[sentiment_id]\n","\n","    return sentiment"],"metadata":{"id":"jfwPTWhz836U","executionInfo":{"status":"ok","timestamp":1746009743939,"user_tz":-330,"elapsed":431,"user":{"displayName":"Jayasha Lakshani","userId":"04882499980161656328"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["# Register UDFs for data processing\n","clean_text_udf = udf(clean_text, StringType())\n","sentiment_transformers_udf = udf(analyze_sentiment_transformers, StringType())"],"metadata":{"id":"zW01yRqf9jy5","executionInfo":{"status":"ok","timestamp":1746009793747,"user_tz":-330,"elapsed":1740,"user":{"displayName":"Jayasha Lakshani","userId":"04882499980161656328"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["## Create streaming sources from MongoDB for Mastodon and YouTube data\n","def create_streaming_sources():\n","    \"\"\"Create streaming sources that continuously pull data from MongoDB collections.\"\"\"\n","\n","    # Setup MongoDB connection options for Spark\n","    mongo_options = {\n","        \"uri\": MONGO_CONNECTION_STRING,\n","        \"database\": \"social_media_analytics\",\n","        \"collection\": \"mastodon_sentiment_data\",\n","    }\n","\n","    # Stream Mastodon data\n","    mastodon_stream = spark \\\n","        .readStream \\\n","        .format(\"mongodb\") \\\n","        .options(**mongo_options) \\\n","        .load()\n","\n","    # Update options for YouTube data\n","    mongo_options[\"collection\"] = \"youtube_sentiment_data\"\n","\n","    # Stream YouTube data\n","    youtube_stream = spark \\\n","        .readStream \\\n","        .format(\"mongodb\") \\\n","        .options(**mongo_options) \\\n","        .load()\n","\n","    return mastodon_stream, youtube_stream"],"metadata":{"id":"dwPydNYo-FGC","executionInfo":{"status":"ok","timestamp":1746009847412,"user_tz":-330,"elapsed":134,"user":{"displayName":"Jayasha Lakshani","userId":"04882499980161656328"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["## Alternative approach without direct MongoDB connector - using socket or file source\n","def setup_mock_streaming_sources():\n","    \"\"\"\n","    Create mock streaming sources for testing when direct MongoDB streaming is not available.\n","    This simulates streaming by reading from source collections in small batches.\n","    \"\"\"\n","    # Define input source directory for checkpointing\n","    input_dir = \"/content/drive/MyDrive/Colab Notebooks/Sentiment Analysis/input\"\n","    os.makedirs(input_dir, exist_ok=True)\n","\n","    # Create rate-limited stream for testing\n","    mastodon_stream = spark \\\n","        .readStream \\\n","        .format(\"rate\") \\\n","        .option(\"rowsPerSecond\", 5) \\\n","        .load() \\\n","        .selectExpr(\"timestamp AS created_at\", \"value AS id\")\n","\n","    youtube_stream = spark \\\n","        .readStream \\\n","        .format(\"rate\") \\\n","        .option(\"rowsPerSecond\", 5) \\\n","        .load() \\\n","        .selectExpr(\"timestamp AS published_at\", \"value AS id\")\n","\n","    # For testing, load batch data and simulate as stream\n","    original_db = mongo_client[\"social_media_analytics_new\"]\n","\n","    # Function to convert MongoDB documents to Spark DataFrame rows\n","    def process_mongo_data_to_stream(collection_name, schema):\n","        docs = list(original_db[collection_name].find())\n","        return spark.createDataFrame(docs, schema=schema)\n","\n","    # Load sample data for testing\n","    mastodon_batch = process_mongo_data_to_stream(\"mastodon_sentiment_data\", mastodon_schema)\n","    youtube_batch = process_mongo_data_to_stream(\"youtube_sentiment_data\", youtube_schema)\n","\n","    # Write batch data to temp files for streaming simulation\n","    mastodon_path = f\"{input_dir}/mastodon\"\n","    youtube_path = f\"{input_dir}/youtube\"\n","\n","    mastodon_batch.write.mode(\"overwrite\").parquet(mastodon_path)\n","    youtube_batch.write.mode(\"overwrite\").parquet(youtube_path)\n","\n","    # Create file source streams\n","    mastodon_stream = spark \\\n","        .readStream \\\n","        .schema(mastodon_schema) \\\n","        .parquet(mastodon_path)\n","\n","    youtube_stream = spark \\\n","        .readStream \\\n","        .schema(youtube_schema) \\\n","        .parquet(youtube_path)\n","\n","    return mastodon_stream, youtube_stream"],"metadata":{"id":"ZLKapqzL-upi","executionInfo":{"status":"ok","timestamp":1746011516300,"user_tz":-330,"elapsed":1314,"user":{"displayName":"Jayasha Lakshani","userId":"04882499980161656328"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["## Data Processing Functions\n","def process_mastodon_stream(stream):\n","    \"\"\"Process Mastodon streaming data.\"\"\"\n","    if stream is None:\n","        return None\n","\n","    # Convert timestamp to date format and rename created_at to timestamp\n","    stream = stream.withColumn(\"timestamp\", col(\"created_at\")) \\\n","                   .withColumn(\"date\", to_date(col(\"timestamp\")))\n","\n","    # Clean content\n","    stream = stream.withColumn(\"clean_content\", clean_text_udf(col(\"text\")))\n","\n","    # Filter out empty content\n","    stream = stream.filter(col(\"clean_content\").isNotNull() & (col(\"clean_content\") != \"\"))\n","\n","    # Add sentiment analysis\n","    stream = stream.withColumn(\"sentiment\", sentiment_transformers_udf(col(\"clean_content\")))\n","\n","    # Add platform identifier\n","    stream = stream.withColumn(\"platform\", lit(\" mastodon\"))\n","\n","    # Select relevant columns to match YouTube schema\n","    stream = stream.select(\n","        \"tag\",\n","        \"text\",\n","        \"timestamp\",\n","        \"date\",\n","        \"clean_content\",\n","        \"sentiment\",\n","        \"platform\",\n","        \"post_url\"  # Mastodon-specific field\n","    )\n","\n","    return stream"],"metadata":{"id":"vtwOUwZM_azm","executionInfo":{"status":"ok","timestamp":1746011539933,"user_tz":-330,"elapsed":361,"user":{"displayName":"Jayasha Lakshani","userId":"04882499980161656328"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["def process_youtube_stream(stream):\n","    \"\"\"Process YouTube streaming data.\"\"\"\n","    if stream is None:\n","        return None\n","\n","    # Convert published_at to timestamp and date format\n","    stream = stream.withColumn(\"timestamp\", col(\"published_at\")) \\\n","                   .withColumn(\"date\", to_date(col(\"timestamp\")))\n","\n","    # Clean comment text\n","    stream = stream.withColumn(\"clean_content\", clean_text_udf(col(\"text\")))\n","\n","    # Filter out empty content\n","    stream = stream.filter(col(\"clean_content\").isNotNull() & (col(\"clean_content\") != \"\"))\n","\n","    # Add sentiment analysis\n","    stream = stream.withColumn(\"sentiment\", sentiment_transformers_udf(col(\"clean_content\")))\n","\n","    # Add platform identifier\n","    stream = stream.withColumn(\"platform\", lit(\"youtube\"))\n","\n","    # Select relevant columns to match Mastodon schema\n","    stream = stream.select(\n","        \"tag\",\n","        \"text\",\n","        \"timestamp\",\n","        \"date\",\n","        \"clean_content\",\n","        \"sentiment\",\n","        \"platform\",\n","        \"video_id\",  # YouTube-specific field\n","        \"video_title\"  # YouTube-specific field\n","    )\n","\n","    return stream"],"metadata":{"id":"GDyAPWJa_44h","executionInfo":{"status":"ok","timestamp":1746011831459,"user_tz":-330,"elapsed":342,"user":{"displayName":"Jayasha Lakshani","userId":"04882499980161656328"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["## Data Analysis Functions - For Real-time Aggregations\n","def analyze_platform_sentiment(stream):\n","    \"\"\"Analyze sentiment distribution by platform in real-time.\"\"\"\n","    return stream \\\n","        .groupBy(\"platform\", \"sentiment\") \\\n","        .count() \\\n","        .withColumn(\"timestamp\", current_timestamp())\n","\n","def analyze_tag_sentiment(stream):\n","    \"\"\"Analyze sentiment by tag in real-time.\"\"\"\n","    return stream \\\n","        .groupBy(\"platform\", \"tag\", \"sentiment\") \\\n","        .count() \\\n","        .withColumn(\"timestamp\", current_timestamp())"],"metadata":{"id":"xAoVDVOMAOwy","executionInfo":{"status":"ok","timestamp":1746011921435,"user_tz":-330,"elapsed":1776,"user":{"displayName":"Jayasha Lakshani","userId":"04882499980161656328"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["## MongoDB Sink Functions\n","def save_to_mongodb_platform_sentiment(batch_df, batch_id):\n","    \"\"\"Save platform sentiment data to MongoDB.\"\"\"\n","    if batch_df.isEmpty():\n","        print(f\"Empty batch {batch_id} for platform sentiment, skipping...\")\n","        return\n","\n","    # Convert batch to pandas for easier processing\n","    pandas_df = batch_df.toPandas()\n","\n","    # Format data as expected by the serving layer\n","    platform_sentiment_data = pandas_df.to_dict('records')\n","\n","    # Create document with timestamp\n","    document = {\n","        \"timestamp\": datetime.now(),\n","        \"data\": platform_sentiment_data\n","    }\n","\n","    try:\n","        # Delete existing data\n","        db.batch_platform_sentiment.delete_many({})\n","        # Insert new data\n","        db.batch_platform_sentiment.insert_one(document)\n","        print(f\"Saved platform sentiment batch {batch_id} to MongoDB\")\n","    except Exception as e:\n","        print(f\"Error saving platform sentiment batch {batch_id} to MongoDB: {e}\")"],"metadata":{"id":"92LHY9CaAyx9","executionInfo":{"status":"ok","timestamp":1746011958105,"user_tz":-330,"elapsed":2884,"user":{"displayName":"Jayasha Lakshani","userId":"04882499980161656328"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["def save_to_mongodb_tag_sentiment(batch_df, batch_id):\n","    \"\"\"Save tag sentiment data to MongoDB.\"\"\"\n","    if batch_df.isEmpty():\n","        print(f\"Empty batch {batch_id} for tag sentiment, skipping...\")\n","        return\n","\n","    # Convert batch to pandas for easier processing\n","    pandas_df = batch_df.toPandas()\n","\n","    # Format data as expected by the serving layer\n","    tag_sentiment_data = pandas_df.to_dict('records')\n","\n","    # Create document with timestamp\n","    document = {\n","        \"timestamp\": datetime.now(),\n","        \"data\": tag_sentiment_data\n","    }\n","\n","    try:\n","        # Delete existing data\n","        db.batch_tag_sentiment.delete_many({})\n","        # Insert new data\n","        db.batch_tag_sentiment.insert_one(document)\n","        print(f\"Saved tag sentiment batch {batch_id} to MongoDB\")\n","    except Exception as e:\n","        print(f\"Error saving tag sentiment batch {batch_id} to MongoDB: {e}\")"],"metadata":{"id":"yL0RGL4EBIHn","executionInfo":{"status":"ok","timestamp":1746011958114,"user_tz":-330,"elapsed":5,"user":{"displayName":"Jayasha Lakshani","userId":"04882499980161656328"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["## Main Execution Logic\n","\n","def run_speed_layer():\n","    \"\"\"Run the complete speed layer processing pipeline.\"\"\"\n","    try:\n","        # Get data streams\n","        # For production with proper MongoDB connector:\n","        # mastodon_stream, youtube_stream = create_streaming_sources()\n","\n","        # For testing/development:\n","        mastodon_stream, youtube_stream = setup_mock_streaming_sources()\n","\n","        # Process streams\n","        processed_mastodon = process_mastodon_stream(mastodon_stream)\n","        processed_youtube = process_youtube_stream(youtube_stream)\n","\n","        # Union the streams with allowMissingColumns=True to handle platform-specific fields\n","        combined_stream = processed_mastodon.unionByName(processed_youtube, allowMissingColumns=True)\n","\n","        # Create analysis streams\n","        platform_sentiment_stream = analyze_platform_sentiment(combined_stream)\n","        tag_sentiment_stream = analyze_tag_sentiment(combined_stream)\n","\n","        # Define output sinks\n","        platform_query = platform_sentiment_stream \\\n","            .writeStream \\\n","            .outputMode(\"complete\") \\\n","            .trigger(processingTime=\"10 seconds\") \\\n","            .foreachBatch(save_to_mongodb_platform_sentiment) \\\n","            .option(\"checkpointLocation\", f\"{PROJECT_DIR}/checkpoints/platform_sentiment\") \\\n","            .start()\n","\n","        tag_query = tag_sentiment_stream \\\n","            .writeStream \\\n","            .outputMode(\"complete\") \\\n","            .trigger(processingTime=\"10 seconds\") \\\n","            .foreachBatch(save_to_mongodb_tag_sentiment) \\\n","            .option(\"checkpointLocation\", f\"{PROJECT_DIR}/checkpoints/tag_sentiment\") \\\n","            .start()\n","\n","        # For production:\n","        platform_query.awaitTermination()\n","        tag_query.awaitTermination()\n","\n","    except Exception as e:\n","        print(f\"Error running speed layer: {e}\")\n","        import traceback\n","        traceback.print_exc()"],"metadata":{"id":"FmV406i7Bhdf","executionInfo":{"status":"ok","timestamp":1746012224418,"user_tz":-330,"elapsed":2934,"user":{"displayName":"Jayasha Lakshani","userId":"04882499980161656328"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["if __name__ == \"__main__\":\n","    run_speed_layer()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":547},"id":"OtdKiln2CA-k","executionInfo":{"status":"error","timestamp":1746013057657,"user_tz":-330,"elapsed":804995,"user":{"displayName":"Jayasha Lakshani","userId":"04882499980161656328"}},"outputId":"b171f314-dbac-42ad-88e5-d24201180db8"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["Saved tag sentiment batch 5 to MongoDB\n","Saved platform sentiment batch 3 to MongoDB\n"]},{"output_type":"stream","name":"stderr","text":["ERROR:root:KeyboardInterrupt while sending command.\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.11/dist-packages/py4j/java_gateway.py\", line 1038, in send_command\n","    response = connection.send_command(command)\n","               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/local/lib/python3.11/dist-packages/py4j/clientserver.py\", line 511, in send_command\n","    answer = smart_decode(self.stream.readline()[:-1])\n","                          ^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/usr/lib/python3.11/socket.py\", line 718, in readinto\n","    return self._sock.recv_into(b)\n","           ^^^^^^^^^^^^^^^^^^^^^^^\n","KeyboardInterrupt\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-30-13ef98c3cc31>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0m__name__\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"__main__\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m     \u001b[0mrun_speed_layer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-29-f601a601d91b>\u001b[0m in \u001b[0;36mrun_speed_layer\u001b[0;34m()\u001b[0m\n\u001b[1;32m     40\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     41\u001b[0m         \u001b[0;31m# For production:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 42\u001b[0;31m         \u001b[0mplatform_query\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mawaitTermination\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     43\u001b[0m         \u001b[0mtag_query\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mawaitTermination\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     44\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pyspark/sql/streaming/query.py\u001b[0m in \u001b[0;36mawaitTermination\u001b[0;34m(self, timeout)\u001b[0m\n\u001b[1;32m    219\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jsq\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mawaitTermination\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtimeout\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0;36m1000\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    220\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 221\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jsq\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mawaitTermination\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    222\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    223\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/py4j/java_gateway.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args)\u001b[0m\n\u001b[1;32m   1319\u001b[0m             \u001b[0mproto\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mEND_COMMAND_PART\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1320\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1321\u001b[0;31m         \u001b[0manswer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgateway_client\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msend_command\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcommand\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1322\u001b[0m         return_value = get_return_value(\n\u001b[1;32m   1323\u001b[0m             answer, self.gateway_client, self.target_id, self.name)\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/py4j/java_gateway.py\u001b[0m in \u001b[0;36msend_command\u001b[0;34m(self, command, retry, binary)\u001b[0m\n\u001b[1;32m   1036\u001b[0m         \u001b[0mconnection\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_connection\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1037\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1038\u001b[0;31m             \u001b[0mresponse\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mconnection\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msend_command\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcommand\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1039\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mbinary\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1040\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mresponse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_create_connection_guard\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mconnection\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/py4j/clientserver.py\u001b[0m in \u001b[0;36msend_command\u001b[0;34m(self, command)\u001b[0m\n\u001b[1;32m    509\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    510\u001b[0m             \u001b[0;32mwhile\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 511\u001b[0;31m                 \u001b[0manswer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msmart_decode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstream\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreadline\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    512\u001b[0m                 \u001b[0mlogger\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdebug\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Answer received: {0}\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0manswer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    513\u001b[0m                 \u001b[0;31m# Happens when a the other end is dead. There might be an empty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.11/socket.py\u001b[0m in \u001b[0;36mreadinto\u001b[0;34m(self, b)\u001b[0m\n\u001b[1;32m    716\u001b[0m         \u001b[0;32mwhile\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    717\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 718\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_sock\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv_into\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    719\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mtimeout\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    720\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_timeout_occurred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]}]}